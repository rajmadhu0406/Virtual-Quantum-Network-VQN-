from pydantic import BaseModel
from typing import List, Optional
from enum import Enum

# Define an Enum for the request status
class RequestStatus(str, Enum):
    processing = "processing"
    processed = "processed"
    completed = "completed"

# Base model for Request that contains common fields
class RequestBase(BaseModel):
    req_string: str
    user_id: str  # This should match the username in the User table
    status: RequestStatus = RequestStatus.processing
    resource_ids: List[int]  # A list of integers corresponding to resource IDs

# Model for creating a new Request (input model)
class RequestCreate(RequestBase):
    pass

# Model for reading a Request from the database (output model)
class DBRequest(RequestBase):
    id: int  # The primary key generated by the database

    class Config:
        orm_mode = True

# Optionally, a model for a list of Requests
class DBRequestList(BaseModel):
    request_list: List[DBRequest]
    
    class Config:
        orm_mode = True
